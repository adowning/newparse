version: '3'
services:
  redis:
    image: redis
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: '${S3_ACCESS_KEY}'
      MINIO_SECRET_KEY: '${S3_SECRET_KEY}'
    volumes:
      - miniodata:/data
    ports:
      - '1338:9000'
    command: server /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
  db:
    image: mongo
    env_file: .env
    volumes:
      - dbdata:/data/db
    # dns:
    #   - 8.8.8.8
  # server:
  #   build: .
  #   env_file: .env
  #   ports:
  #     - '1337:1337'
  #   # dns:
  #   #   - 8.8.8.8
  #   depends_on:
  #     - db
  #     - minio
  #     - redis
  #   # networks:
  #   #   - myvlan
  parse-server:
    image: parseplatform/parse-server
    container_name: z_parse_server
    volumes:
      - './docker/builds/parse/config/:/parse-server/config/'
      - './dist/cloud/:/parse-server/cloud/'
      - '/etc/localtime:/etc/localtime:ro'
    depends_on:
      - mongo
    ports:
      - '1337:1337'
    command: /parse-server/config/config.json
    env_file: './.env'

volumes:
  dbdata: {}
  miniodata: {}
# define networks
# networks:
#   # use the default network driver for inter-container links
#   private:

#   # define a VLAN network (eth1 is trunked to multiple VLANs)
#   vlan87:
#     driver: macvlan
#     driver_opts:
#       parent: enp0s25
#     ipam:
#       config:
#         - subnet: 10.25.87.0/24
#           gateway: 10.25.87.1
#           ip_range: 10.25.87.32/28
# networks:
#   private:
#   myvlan:
#     driver: macvlan
#     driver_opts:
#       parent: enp0s25
#     ipam:
#       config:
#         - subnet: 192.168.1.11/24
